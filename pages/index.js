import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { ApolloClient, ApolloError, InMemoryCache, gql} from '@apollo/client/core'
import 'cross-fetch/polyfill'

export default function Home() {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/master/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

const GITHUB_TOKEN = process.env.NEXT_PUBLIC_GITHUB_ACCESS_TOKEN;
console.log(GITHUB_TOKEN);
if(typeof GITHUB_TOKEN === 'undefined') {
    throw new Error('GITHUB_TOKEN cannot be found');
}

const client = new ApolloClient({
    uri: 'https://api.github.com/graphql',
    headers: {authorization: `Bearer ${GITHUB_TOKEN}`},
    cache: new InMemoryCache()
});

const query = gql`
    query {
        search(query: "repo:YutoUrushima/github-issue-next-blog is:issue", type: ISSUE, first: 5) {
        issueCount
        nodes {
            ... on Issue { number title }
        }
        }
    }
`

client.query({query: query})
    .then(result => handleApolloResult(result.data))
    .catch(handleApolloError);

function handleApolloResult(data) {
    const { issueCount, nodes } = data.search;
    console.log(`Num of issues: ${issueCount}`);
    for(const issue of nodes) {
        console.log(`* ${issue.number}: ${issue.title}`);
    }
}

function handleApolloError(err) {
    console.log(err.message);
}
